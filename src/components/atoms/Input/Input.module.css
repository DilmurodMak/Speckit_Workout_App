/* Input Component Styles */

.container {
  display: flex;
  flex-direction: column;
  gap: 0.375rem;
  width: 100%;
}

.label {
  font-size: var(--font-size-sm);
  font-weight: 500;
  color: var(--color-text);
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.required {
  color: var(--color-danger);
  font-weight: 600;
}

.input {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: var(--font-size-base);
  font-family: inherit;
  color: var(--color-text);
  background-color: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  transition: all var(--transition-base);
  
  /* WCAG 2.1 AA - Minimum touch target */
  min-height: 44px;
}

.input::placeholder {
  color: var(--color-text-secondary);
}

.input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
}

.input:hover:not(:disabled):not(.error) {
  border-color: var(--color-primary);
}

.input:disabled,
.disabled {
  background-color: var(--color-surface-elevated);
  color: var(--color-text-secondary);
  cursor: not-allowed;
  opacity: 0.6;
}

/* Error state */
.input.error {
  border-color: var(--color-danger);
}

.input.error:focus {
  border-color: var(--color-danger);
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

.errorText {
  font-size: var(--font-size-sm);
  color: var(--color-danger);
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.helperText {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
}

/* Number input - hide spinner on Webkit browsers */
.input[type='number']::-webkit-inner-spin-button,
.input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Number input - hide spinner on Firefox */
.input[type='number'] {
  -moz-appearance: textfield;
  appearance: textfield;
}
